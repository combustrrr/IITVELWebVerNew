{"ast":null,"code":"var _jsxFileName = \"/workspaces/IITVELWebVerNew/frontend/src/pages/Experiments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experiments = () => {\n  _s();\n  const [experiments, setExperiments] = useState(null);\n\n  // Fetch the experiments data from the backend\n  useEffect(() => {\n    fetch('/api/experiments').then(response => response.json()).then(data => setExperiments(data)).catch(error => console.error('Error fetching experiments data:', error));\n  }, []);\n  if (!experiments) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Experiments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"experiments-list\",\n      children: Object.keys(experiments).map(part => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: part\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chapters-list\",\n          children: Object.keys(experiments[part]).map(chapter => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: chapter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"experiment-list\",\n              children: experiments[part][chapter].map((experiment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: experiment.url,\n                  children: experiment.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 49\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 37\n            }, this)]\n          }, chapter, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, part, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Experiments, \"/zPuS0jVoar52z03TxW8fula9f0=\");\n_c = Experiments;\nexport default Experiments;\nvar _c;\n$RefreshReg$(_c, \"Experiments\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Experiments","_s","experiments","setExperiments","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","keys","map","part","chapter","experiment","index","href","url","name","_c","$RefreshReg$"],"sources":["/workspaces/IITVELWebVerNew/frontend/src/pages/Experiments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Experiments = () => {\n    const [experiments, setExperiments] = useState(null);\n\n    // Fetch the experiments data from the backend\n    useEffect(() => {\n        fetch('/api/experiments')\n            .then((response) => response.json())\n            .then((data) => setExperiments(data))\n            .catch((error) => console.error('Error fetching experiments data:', error));\n    }, []);\n\n    if (!experiments) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <h1>List of Experiments</h1>\n            <ul className=\"experiments-list\">\n                {Object.keys(experiments).map((part) => (\n                    <li key={part}>\n                        <h2>{part}</h2>\n                        <ul className=\"chapters-list\">\n                            {Object.keys(experiments[part]).map((chapter) => (\n                                <li key={chapter}>\n                                    <h3>{chapter}</h3>\n                                    <ul className=\"experiment-list\">\n                                        {experiments[part][chapter].map((experiment, index) => (\n                                            <li key={index}>\n                                                <a href={experiment.url}>{experiment.name}</a>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </li>\n                            ))}\n                        </ul>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Experiments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}