{"ast":null,"code":"var _jsxFileName = \"/workspaces/IITVELWebVerNew/frontend/src/pages/Experiments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Experiments = () => {\n  _s();\n  const [experiments, setExperiments] = useState(null);\n  const [selectedPart, setSelectedPart] = useState(null);\n\n  // Fetch the experiments data from the backend\n  useEffect(() => {\n    fetch('/api/experiments').then(response => response.json()).then(data => setExperiments(data)).catch(error => console.error('Error fetching experiments data:', error));\n  }, []);\n  if (!experiments) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Parts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"experiments-list\",\n        children: Object.keys(experiments).map(part => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedPart(part),\n          className: selectedPart === part ? 'active' : '',\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: part\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)\n        }, part, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: selectedPart && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedPart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chapters-list\",\n          children: Object.keys(experiments[selectedPart]).map(chapter => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: chapter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"experiment-list\",\n              children: experiments[selectedPart][chapter].map((experiment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: experiment.url,\n                  children: experiment.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 49\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this)]\n          }, chapter, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Experiments, \"qlbtXzHywsMcr+LUhi+kr+62VGE=\");\n_c = Experiments;\nexport default Experiments;\nvar _c;\n$RefreshReg$(_c, \"Experiments\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Experiments","_s","experiments","setExperiments","selectedPart","setSelectedPart","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","className","Object","keys","map","part","onClick","chapter","experiment","index","href","url","name","_c","$RefreshReg$"],"sources":["/workspaces/IITVELWebVerNew/frontend/src/pages/Experiments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Experiments = () => {\n    const [experiments, setExperiments] = useState(null);\n    const [selectedPart, setSelectedPart] = useState(null);\n\n    // Fetch the experiments data from the backend\n    useEffect(() => {\n        fetch('/api/experiments')\n            .then((response) => response.json())\n            .then((data) => setExperiments(data))\n            .catch((error) => console.error('Error fetching experiments data:', error));\n    }, []);\n\n    if (!experiments) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div style={{ display: 'flex' }}>\n            <div className=\"sidebar\">\n                <h1>Parts</h1>\n                <ul className=\"experiments-list\">\n                    {Object.keys(experiments).map((part) => (\n                        <li key={part} onClick={() => setSelectedPart(part)} className={selectedPart === part ? 'active' : ''}>\n                            <h2>{part}</h2>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div className=\"main-content\">\n                {selectedPart && (\n                    <>\n                        <h1>{selectedPart}</h1>\n                        <ul className=\"chapters-list\">\n                            {Object.keys(experiments[selectedPart]).map((chapter) => (\n                                <li key={chapter}>\n                                    <h3>{chapter}</h3>\n                                    <ul className=\"experiment-list\">\n                                        {experiments[selectedPart][chapter].map((experiment, index) => (\n                                            <li key={index}>\n                                                <a href={experiment.url}>{experiment.name}</a>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </li>\n                            ))}\n                        </ul>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Experiments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}